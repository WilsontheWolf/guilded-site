{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Content","props","arguments","state","value","fetch","process","this","file","data","ok","text","setState","markdown","React","Component","Left","className","href","Header","App","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAeMA,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,eAASC,YACJD,MAAQA,EACb,EAAKE,MAAQ,CACTC,MAAO,cAJI,E,2MAWMC,MAAM,GAAD,OAAIC,gBAAJ,YAA8BC,KAAKN,MAAMO,O,WAA3DC,E,QACMC,G,gBAAIN,EAAQ,sB,wCACHK,EAAKE,O,QAAnBP,E,iEAGLA,EAAK,oC,QAETG,KAAKK,SAAS,CACVR,U,+IAKJ,OACI,cAAC,IAAD,CACIS,SAAUN,KAAKJ,MAAMC,Y,GA3BfU,IAAMC,WAiC5B,SAASC,IACL,OACI,qBAAKC,UAAU,OAAf,SACI,mBAAGC,KAAK,IAAID,UAAU,SAAtB,SACI,oDAMhB,SAASE,IACL,OACI,qBAAKF,UAAU,SAAf,SACI,cAACD,EAAD,MAIGI,MA7Df,WACI,OACI,sBAAKH,UAAU,MAAf,UACI,cAACE,EAAD,IACA,qBAAKE,GAAG,UAAR,SACI,cAAC,EAAD,CAASb,KAAK,mBCGfc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c7f30d36.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\nimport MD from 'react-showdown';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Header />\n            <div id=\"content\">\n                <Content file=\"index.md\"/>\n            </div>\n        </div>\n    );\n}\n\nclass Content extends React.Component {\n    constructor(props) {\n        super(...arguments)\n        this.props = props\n        this.state = {\n            value: 'Loading...',\n        };\n    }\n\n    async componentDidMount() {\n        let value\n        try {\n            let data = await fetch(`${process.env.PUBLIC_URL}/${this.props.file}`);\n            if (!data.ok) value = 'Error loading page!'\n            else value = await data.text();\n        }\n        catch (e) {\n            value = `Error loading page! ${e}`\n        }\n        this.setState({\n            value\n        })\n    }\n\n    render() {\n        return (\n            <MD\n                markdown={this.state.value} />\n        )\n    }\n}\n\n\nfunction Left() {\n    return (\n        <div className=\"logo\">\n            <a href=\"/\" className=\"noLink\">\n                <button>Guilded.js</button>\n            </a>\n        </div>\n    )\n}\n\nfunction Header() {\n    return (\n        <div className=\"header\">\n            <Left />\n        </div>\n    )\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}